teardown: false
pipeline_executor: false
kubeconfig_location: "/root/.kube"
kustomize_version: "5.4.2"
kubectl_version: "1.24.6"
argocd_cli_version: "2.11.3"
cluster_name: envname
kubeconfig_local_location: "/tmp"
helmfile_version: "0.165.0"
helm_version: "3.14.0"
cluster_cloud_provider: "aws"
#argo
argocd_override:
argocd_default:
  argocd_appname: argocd
  gitrepo_owner: mojaloop
  gitrepo_repo: iac-modules
  initial_argo_gitrepo_path: gitops/argo-apps/base
  root_app_gitrepo_path: gitops/argo-apps/overlays/local
  gitrepo_host_fqdn: "https://github.com/"
  gitrepo_raw_host_fqdn: "https://raw.githubusercontent.com"
  initial_application_gitrepo_tag: "vexp-cck8s19"
  namespace: "argocd"
  ansible_gitrepo: iac-ansible-collection-roles
  ansible_collection_path: mojaloop/iac
  apps:
    utils:
      argocd_app_name: "utils"
      app_namespace: "argocd"
      application_gitrepo_tag: "vexp-cck8s19"
      sync_wave: "'-10'"
      app_enabled: "true"
      sub_apps:
        argocd_helm:
          app_name: "argocd"
          namespace: "argocd"
          helm_version: "7.6.8"
          public_ingress_access_domain: "false"
          sub_app_enabled: "true"
        rook_ceph:
          app_name: "rook-ceph"
          namespace: "rook-ceph"
          helm_version: "1.14.5"
          #rook_csi_kubelet_dir_path: "/var/snap/microk8s/common/var/lib/kubelet"
          rook_csi_kubelet_dir_path: "/var/lib/kubelet"
          sub_app_enabled: "true"
        reflector:
          app_name: "reflector"
          helm_version: "7.1.262"
          namespace: "default"
          sub_app_enabled: "true"
        reloader:
          app_name: "reloader"
          helm_version: "1.0.67"
          namespace: "default"
          sub_app_enabled: "true"
        crossplane:
          app_name: "crossplane"
          helm_version: "1.16.0"
          namespace: "crossplane-system"
          debug: "debug"
          sub_app_enabled: "true"
        percona:
          app_name: "percona-postgresql-operator"
          helm_version: "2.4.0"
          namespace: "percona"
          debug: "debug"
          sub_app_enabled: "true"
        redis:
          app_name: "redis-operator"
          helm_version: "0.16.4"
          namespace: "redis"
          debug: "debug"
        kubernetes_secret_generator:
          app_name: "kubernetes-secret-generator"
          helm_version: "3.4.0"
          namespace: "default"
          sub_app_enabled: "true"
        external_secrets:
          app_name: "external-secrets"
          helm_version: "0.9.20"
          namespace: "external-secrets"
          sub_app_enabled: "true"
        istio:
          app_name: istio
          sub_app_enabled: "true"
          proxy_log_level: "debug"
          namespace: "istio-system"
          helm_version: "1.22.1"
          external_ingress_https_port: "'32443'"
          external_ingress_http_port: "'32080'"
          external_ingress_health_port: "'32081'"
          internal_ingress_https_port: "'31443'"
          internal_ingress_http_port: "'31080'"
          internal_ingress_health_port: "'31081'"
          external_gateway_namespace: "istio-ingress-ext"
          internal_gateway_namespace: "istio-ingress-int"
          internal_gateway_name: "istio-internal-ingress-gw"
          external_gateway_name: "istio-external-ingress-gw"
          gw_sync_wave: "'-9'" # hack to start gw after istiod
        cert_manager:
          app_name: "cert-manager"
          helm_version: "1.15.0"
          namespace: "cert-manager"
          sub_app_enabled: "true"
          credentials_secret: "cert-manager-dns"
        consul:
          app_name: "consul"
          sub_app_enabled: "true"
          namespace: "consul"
          helm_version: "1.4.0"
          replicas: "'1'"
          storage_size: 3Gi
          sync_wave: "'-9'"
        post_config:
          app_name: "post-config"
          sync_wave: "'-9'"
          vault_crossplane_modules_version: "1.0.0"
          terraform_crossplane_modules_version: "0.16.0"
          ansible_crossplane_modules_version: "0.6.0"
          rds_crossplane_modules_version: "1.14.0"
          ec2_crossplane_modules_version: "1.14.0"
          crossplane_func_pat_version: "0.2.1"
          k8s_crossplane_module_version: "0.11.4"
          aws_crossplane_module_version: "0.37.1"
        rook_ceph_bucket_config:
          public_ingress_access_domain: "false"
          app_name: "rook-ceph-bucket"

    xplane_provider_config:
      app_name: "xplane-db-provider"
      argocd_app_name: "xplane-db-provider"
      app_namespace: "argocd"
      app_enabled: "true"
      namespace: "crossplane-system"
      sync_wave: "'-7'"
      cloud_provider: "aws"
      application_gitrepo_tag: "vexp-cck8s19"
      sub_apps: {}

    k8s_config:
      argocd_app_name: "k8s-post-config"
      app_name: "k8s-post-config"
      app_namespace: "argocd"
      namespace: "k8s-post-config"
      app_enabled: "true"
      sync_wave: "'0'"
      application_gitrepo_tag: "vexp-cck8s19"
      terraform_modules_tag: "vexp-cck8s19"
      k8s_cloud_region: "eu-west-2"
      aws_tf_provider_version: "5.70.0"
      eks_name: "eksname"
      sub_apps: {}

    vault:
      argocd_app_name: "vault"
      app_namespace: "argocd"
      app_enabled: "true"
      application_gitrepo_tag: "vexp-cck8s19"
      sync_wave: "'-8'"
      sub_apps:
        vault:
          app_name: "vault"
          sub_app_enabled: "true"
          namespace: "vault"
          helm_version: "0.24.1"
          public_ingress_access_domain: "false"
          vault_keys_secret: "vault-keys"
          vault_tf_provider_version: "~> 3.16"
          vault_terraform_modules_tag: "vexp-cck8s19"
          vault_log_level: "trace"
          cloud_platform_api_client_id: "id"
          cloud_platform_api_client_secret: "secret"
          vault_kv_secret: "secret"
          vault_tf_post_config_output_secret: "vault-tf-post-config"
        vault_config_operator:
          app_name: "vault-config-operator"
          sub_app_enabled: "true"
          namespace: "vault-config"
          helm_version: "0.8.28"
        post_config:
          app_name: "post-config"
          sync_wave: "'-7'"
          vault_read_all_kv_secrets_policy_name: "read-all-kv"
          vault_k8s_admin_auth_path: "admin-k8s"
          vault_k8s_admin_role_name: "admin-role"

    maintenance:
      argocd_app_name: "maintenance"
      app_namespace: "argocd"
      app_enabled: "true"
      application_gitrepo_tag: "vexp-cck8s19"
      sync_wave: "'-5'"
      sub_apps:
        velero:
          app_name: "velero"
          helm_version: "7.2.1"
          namespace: "velero"
          sub_app_enabled: "true"
          object_storage_cloud_role: "arn:blah"
          enable_object_storage_backend: "'false'"
          object_storage_access_role: "object-storage-access"
          object_storage_backend_path: "cc-cloud-provider-os"
          object_storage_region: "none"
          object_storage_secret_name: "velero-cloud-api-secret"
          object_storage_secret_key: "cloud"
          object_storage_bucket: "velero"
          plugin_version: "v1.10.1"
        pre:
          app_name: "pre"
          sub_app_enabled: "true"
          sync_wave: "'-6'"
        post_config:
          app_name: "post-config"
          sub_app_enabled: "true"
          sync_wave: "'-4'"

    dns_utils:
      argocd_app_name: "dns-utils"
      app_namespace: "argocd"
      app_enabled: "true"
      application_gitrepo_tag: "vexp-cck8s19"
      sync_wave: "'-5'"
      sub_apps:
        ext_dns:
          app_name: "ext-dns"
          helm_version: "7.5.5"
          namespace: "ext-dns"
          sub_app_enabled: "true"
        cr_config:
          app_name: "cr-config"
          sub_app_enabled: "true"
          istio_internal_gateway_name: "istio-internal-ingress-gw"
          istio_external_gateway_name: "istio-external-ingress-gw"
          istio_internal_wildcard_gateway_name: "internal-wildcard-gateway"
          istio_external_wildcard_gateway_name: "external-wildcard-gateway"
          istio_external_gateway_namespace: "istio-ingress-ext"
          istio_internal_gateway_namespace: "istio-ingress-int"
          internal_load_balancer_dns: "dns.name"
          external_load_balancer_dns: "dns.name"
          dns_public_subdomain: "x.y.z"
          dns_private_subdomain: "x.y.internal"
          cert_manager_cloud_policy: "arn:blah"
          external_dns_cloud_role: "arn:blah"
          dns_cloud_api_region: "none"
          letsencrypt_server: "https://acme-v02.api.letsencrypt.org/directory"
          letsencrypt_email: "none@example.com"
          cert_manager_namespace: "cert-manager"
          dns_backend_path: "cc-cloud-provider-dns"
          enable_dns_backend: "'true'"
          dns_access_role: "dns-access"
          cert_manager_access_role: "cert-man-access"

        post_config:
          app_name: "post-config"
          sub_app_enabled: "true"
          sync_wave: "'-4'"
        pre:
          app_name: "pre"
          sub_app_enabled: "true"
          sync_wave: "'-6'"
    security:
      argocd_app_name: "security"
      application_gitrepo_tag: "vexp-cck8s19"
      app_namespace: "argocd"
      sync_wave: "'-3'"
      app_enabled: "true"
      sub_apps:
        zitadel:
          app_name: "zitadel"
          sub_app_enabled: "true"
          sync_wave: "'-2'"
          namespace: "zitadel"
          helm_version: "7.15.0"
          log_level: "info"
          zitadel_tf_provider_version: "99.99.99"
          terraform_modules_tag: "vexp-cck8s19"
          vault_rbac_admin_group: "techops-admin"
          zitadel_grant_prefix: "zitadel:grants"
          public_ingress_access_domain: "true"
          zitadel_post_config_output_secret: "post-config-output"
          argocd_oidc_secret: "argo-oidc-secret"
          argocd_user_rbac_group: "argocd_users"
          argocd_admin_rbac_group: "argocd_administrators"
          k8s_user_rbac_group: "techops-users"
          k8s_admin_rbac_group: "techops-admin"
          k8s_oidc_post_config_output_secret: "k8s-oidc-post-config-output"
          post_config_sync_wave: "'-1'"
        cockroachdb:
          app_name: "cockroach-db"
          sub_app_enabled: "true"
          helm_version: "13.0.2"
          pvc_size: "5Gi"
        netbird:
          app_name: "netbird"
          sub_app_enabled: "true"
          sync_wave: "'1'"
          helm_version: "1.3.0"
          image_version: "0.30.2"
          dashboard_helm_version: "1.3.0"
          dashboard_image_version: "v2.6.1"
          namespace: "netbird"
          log_level: "debug"
          rbac_admin_group: "techops-admin"
          rbac_user_group: "techops-users"
          preconfig_output_secret: "netbird-management"
          stunner_system_namespace: "stunner-system"
          stunner_gateway_operator_helm_version: "0.19.0"
          stunner_nodeport_port: "'31821'"
          stunner_impl_namespace: stunner-impl
          stunner_auth_secret: stunner-auth-secret
          terraform_modules_tag: "vexp-cck8s19"
          public_ingress_access_domain: "true"
          pre_sync_wave: "'0'"
          post_sync_wave: "'1'"
          setup_key_secret_name: "netbird-ansible-output"
          gw_setup_key_secret_key: "gw-setup-key"
          build_setup_key_secret_key: "build-setup-key"
          cc_vpc_cidr: "127.0.0.1/32"
          ansible_collection_tag: "vexp-cck8s19"
          netbird_tf_provider_version: "99.99.99"
          datastore_encryption_key_secret: "db-enc-key-secret"
          datastore_encryption_key_secret_key: "key"
    nexus:
      argocd_app_name: "nexus"
      app_namespace: "argocd"
      app_enabled: "true"
      application_gitrepo_tag: "cto-102-nexus-01"
      sync_wave: "'-3'"
      sub_apps:
        nexus:
          app_name: "nexus"
          helm_version: "4.44.0"
          namespace: "nexus"
          public_ingress_access_domain: "true"
          storage_size: "30Gi"
        pre:
          app_name: "pre"
          sub_app_enabled: "true"
          sync_wave: "'-4'"
          vault_k8s_admin_auth_path: "admin-k8s"
          vault_k8s_admin_role_name: "admin-role"
        post_config:
          app_name: "nexus-post-config"
          sub_app_enabled: "true"
          sync_wave: "'-2'"
          ansible_collection_tag: "vexp-cck8s19"

    gitlab:
      argocd_app_name: "gitlab"
      app_namespace: "argocd"
      app_enabled: "true"
      application_gitrepo_tag: "vexp-cck8sargoroot95"
      sync_wave: "'2'"
      sub_apps:
        gitlab:
          app_name: "gitlab"
          helm_version: "8.3.0"
          namespace: "gitlab"
          public_ingress_access_domain: "true"
          oidc_secret: "gitlab-oidc-secret"
          gitlab_admin_rbac_group: "gitlab_administrators"
          gitlab_user_rbac_group: "gitlab_users"
          gitlab_maintainer_rbac_group: "gitlab_maintainers"
          terraform_modules_tag: "vexp-cck8sargoroot581"
          root_token_secret_name: "root-token-secret"
          root_token_secret_key: "token"
          gitaly_storage_size: "10Gi"
          praefect_externalservice_name: "praefect-db-external"
          gitlab_externalservice_name: "gitlab-db-external"
        registry:
          public_ingress_access_domain: "true"
        pre:
          app_name: "pre"
          sub_app_enabled: "true"
          sync_wave: "'1'"
          redis_cluster_size: "'3'"
          redis_storage_size: "'2Gi'"
          postgres_replicas: "'1'"
          postgres_proxy_replicas: "'1'"
          postgres_storage_size: "100"
          postgres_instance_size: "small"
          pgdb_helm_version: "2.4.0"
          praefect_postgres_replicas: "'1'"
          praefect_postgres_proxy_replicas: "'1'"
          praefect_postgres_storage_size: "100"
          praefect_postgres_instance_size: "small"
          praefect_pgdb_helm_version: "2.4.0"
          git_lfs_max_objects: "'1000000'"
          git_lfs_storage_size: "10Gi"
          gitlab_artifacts_max_objects: "'1000000'"
          gitlab_artifacts_storage_size: "10Gi"
          gitlab_uploads_max_objects: "'1000000'"
          gitlab_uploads_storage_size: "10Gi"
          gitlab_packages_max_objects: "'1000000'"
          gitlab_packages_storage_size: "10Gi"
          gitlab_mrdiffs_max_objects: "'1000000'"
          gitlab_mrdiffs_storage_size: "10Gi"
          gitlab_tfstate_max_objects: "'1000000'"
          gitlab_tfstate_storage_size: "10Gi"
          gitlab_cisecurefiles_max_objects: "'1000000'"
          gitlab_cisecurefiles_storage_size: "10Gi"
          gitlab_dep_proxy_max_objects: "'1000000'"
          gitlab_dep_proxy_storage_size: "10Gi"
          gitlab_registry_max_objects: "'1000000'"
          gitlab_registry_storage_size: "10Gi"
          gitlab_runner_cache_max_objects: "'1000000'"
          gitlab_runner_cache_storage_size: "10Gi"
          rdbms_provider: "percona"
          rdbms_subnet_list: "[]"
          vpc_cidr: "0.0.0.0/0"
          db_provider_cloud_region: "eu-west-1"
          gitlab_db_secret: "gitlab-postgresql-credentials"
          praefect_db_secret: "praefect-postgresql-credentials"
          gitlab_db_name: "gitlab"
          praefect_db_name: "praefect"
          gitlab_db_username: "gitlab"
          praefect_db_username: "praefect"
          gitlab_dbdeploy_name_prefix: "gitlab-db"
          praefect_dbdeploy_name_prefix: "praefect-db"
          gitlab_db_backup_retention_period: "'1'"
          gitlab_db_preferred_backup_window: "07:00-09:00"
          praefect_db_backup_retention_period: "'1'"
          praefect_db_preferred_backup_window: "07:00-09:00"
        post_config:
          app_name: "gitlab-post-config"
          sub_app_enabled: "true"
          sync_wave: "'3'"
          ansible_collection_tag: "vexp-cck8s19"
          output_secret: "gitlab-post-config"

    deploy_env:
      argocd_app_name: "deploy-env"
      app_namespace: "argocd"
      app_enabled: "true"
      application_gitrepo_tag: "vexp-cck8sargoroot95"
      sync_wave: "'2'"
      sub_apps:
        config:
          app_name: "deploy-env-config"
          sub_app_enabled: "true"
          sync_wave: "'4'"
          terraform_modules_tag: "vexp-cck8sargoroot581"
          namespace: "gitlab"
          output_secret: "env-config"
          ceph_bucket_max_objects: "'100'"
          ceph_bucket_max_size: "10Gi"
        onboard:
          app_name: "deploy-env-onboard"
          sub_app_enabled: "true"
          namespace: "gitlab"
          sync_wave: "'5'"
          terraform_modules_tag: "vexp-cck8sargoroot581"
          grafana_admin_rbac_group: "grafana_administrators"
          grafana_user_rbac_group: "grafana_users"
          vault_admin_rbac_group: "vault_administrators"
          vault_user_rbac_group: "vault_users"
          argocd_admin_rbac_group: "argocd_administrators"
          argocd_user_rbac_group: "argocd_users"

    monitoring:
      argocd_app_name: "monitoring"
      app_namespace: "argocd"
      app_enabled: "true"
      application_gitrepo_tag: "development-cto2.3"
      sync_wave: "'-8'"
      sub_apps:
        pre:
          app_name: "monitoring-pre"
          grafana_crd_version_tag: "5.10.0"
          prometheus_crd_version: "13.0.2"
          grafana_operator_version: "4.4.12"
          namespace: "monitoring"
          sub_app_enabled: "true"
          sync_wave: "'-10'"
          mimir_bucket_name: "mimir-bucket"
          mimir_bucket_max_objects: "'1000000'"
          mimir_bucket_storage_size: "50Gi"
          ctrl_cntr_loki_bucket_name: "control-center-loki-bucket"
          ctrl_cntr_loki_bucket_max_objects: "'1000000'"
          ctrl_cntr_loki_bucket_storage_size: "20Gi"
        monitoring:
          app_name: "monitoring"
          kube_prometheus_helm_version: "9.5.10"
          ctrl_cntr_loki_helm_version: "2.13.0"
          ctrl_cntr_loki_retention_period: "3d" #TODO: increase after testing that limit works
          ctrl_cntr_loki_ingester_max_chunk_age: "2h"
          alertmanager_enabled: "false"
          namespace: "monitoring"
          sync_wave: "'-9'" #after rook is done
          cloudwatch_exporter_role_arn: "arn:aws:iam::<project_id>:role/<role_name>"
        grafana:
          public_ingress_access_domain: "false"
          image_version: "10.2.3"
          tf_provider_version: "3.6.0"
          admin_rbac_group: "grafana_administrators"
          user_rbac_group: "grafana_users"
          mojaloop_dashboards_tag: "v16.3.0-snapshot.24"
          dashboard_datasource_name: "Mimir"
        mimir:
          public_ingress_access_domain: "false"
          helm_version: "1.2.10" # test this config
          max_label_names_per_series: "'35'"
          # config moved from here
          max_global_series_per_user: "'5000000'"
          ingestion_rate: "'200000'"
          ingestion_burst_size: "'500000'"
          retention_period: "30d" # TODO: increase after testing that limit works
          distributor_replica_count: "'2'" # TODO: take all mimir config in monitoring app to mimir's own app
          ingester_replica_count: "'4'"
          querier_replica_count: "'2'"
          query_frontend_replica_count: "'1'"
          compactor_replica_count: "'1'"
          store_gateway_replica_count: "'3'"
          ingester_storage_size: "30Gi"
          compactor_storage_size: "30Gi"
          store_gateway_storage_size: "30Gi"
          distributor_limits_cpu: "1000m"
          distributor_limits_memory: "1Gi"
          ingester_limits_cpu: "1000m"
          ingester_limits_memory: "1Gi"
          querier_limits_cpu: "1000m"
          querier_limits_memory: "1Gi"
          query_frontend_limits_cpu: "1000m"
          query_frontend_limits_memory: "1Gi"
          compactor_limits_cpu: "1000m"
          compactor_limits_memory: "1Gi"
          store_gateway_limits_cpu: "1000m"
          store_gateway_limits_memory: "1Gi"
        prometheus:
          pvc_size: "100Gi"
          retention_period: "1d" # TODO: increase to 10d later
          tsdb_min_block_duration: "30m"
          tsdb_max_block_duration: "30m"
          resources_preset_bitnami: "2xlarge"
          remote_write_tenant_id: "infitx"
          cluster_label_value: "control-center"
        post_config:
          app_name: "monitoring-post-config"
          namespace: "monitoring"
          terraform_modules_tag: "vexp-cck8sargoroot581"
          sync_wave: "'-1'" #after zitadel is done for oidc

user = User.where(id: 1).first
user.password = '{{ server_password }}'
user.password_confirmation = '{{ server_password }}'

# Create a new token name with the current datetime
timestamp = Time.now.strftime('%Y%m%d%H%M%S')
token_name = "apitoken_#{timestamp}"

# Delete any existing token with the base name 'apitoken' if needed
existing_token = user.personal_access_tokens.where("name LIKE ?", "apitoken%").first
if existing_token
  existing_token.destroy
end

# Create a new token with a unique name, new expiration date, and new token value
new_token = user.personal_access_tokens.create(scopes: [:api], name: token_name, expires_at: 1.year.from_now)

# Set the new token value
new_token.set_token('{{ server_token }}')

# Save the new token and user
new_token.save!
user.save!
